# Copyright 2019 The Johns Hopkins University Applied Physics Laboratory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/usr/bin/env python

import argparse
import sys

import numpy as np

from skimage import data, img_as_float
from skimage import exposure

def normalize(args):
    volume = np.load(args.input)
    volume_shape = volume.shape
    for img in range(0,volume_shape[2]):
        if(args.mode==1):
            # Gamma
            gamma_corrected = exposure.adjust_gamma(volume[:,:,img], 2)
            volume[:,:,img] = gamma_corrected
        else:
            # Logarithmic
            logarithmic_corrected = exposure.adjust_log(volume[:,:,img], 1)
            volume[:,:,img] = logarithmic_corrected #save in place

    with open(args.output, 'wb') as f:
        np.save(f, volume)

def main():
    parser = argparse.ArgumentParser(description='boss processing script')
    parser = argparse.ArgumentParser(add_help=False)
    
    parser.add_argument('-m', '--mode', required=True, type=int, help='Mode: Logarithmic(0) Gamma(1)')
    parser.add_argument('-o', '--output', required=False, help='Output file')
    parser.add_argument('-i', '--input', required=False, help='Input file')
    parser.add_argument('--gamma', type=float, default=1.0, help='Non negative real number. Default value is 1.')
    parser.add_argument('--scale', type=float, default=1.0, help='The constant multiplier. Default value is 1')
    
    args = parser.parse_args()
    normalize(args)
if __name__ == '__main__':
    main()
